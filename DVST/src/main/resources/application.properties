
server.port=${PORT:2050}

#Feature that determines what happens when no accessors are found for a type
#(and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
spring.datasource.initialization-mode=always


server.error.whitelabel.enabled=false
# For h2 database
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console


# For PostgreSQL
#spring.datasource.url=jdbc:postgresql://ec2-54-235-208-103.compute-1.amazonaws.com:5432/dd2k9nldnbiv0s?user=eohwlqtyrachab&password=832d4c421c9ad87493d1d5fd4ae1a9f8db88b3826df2ebbe9e009125a0b61be9&sslmode=require
#spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
#spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
#
#
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.tomcat.max-active=10
#spring.datasource.tomcat.max-idle=5
#spring.datasource.hikari.minimum-idle=5
#spring.datasource.tomcat.initial-size=5
#spring.datasource.tomcat.remove-abandoned=true